<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>programming on Team 1</title>
    <link>https://xeexin.github.io/team1WebPage/categories/programming/</link>
    <description>Recent content in programming on Team 1</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 28 May 2023 21:29:20 +0200</lastBuildDate><atom:link href="https://xeexin.github.io/team1WebPage/categories/programming/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Docker : 가상화 플랫폼을 넘어서</title>
      <link>https://xeexin.github.io/team1WebPage/docker/docker1/</link>
      <pubDate>Sun, 28 May 2023 21:29:20 +0200</pubDate>
      
      <guid>https://xeexin.github.io/team1WebPage/docker/docker1/</guid>
      <description>Docker 가상화 플랫폼 소프트웨어 개발과 배포를 Docker는 개발자들에게 많은 혜택을 제공하고 있습니다. 컨테이너 기반 가상화 기술을 통해 Docker는 애플리케이션을 격리된 환경에서 실행하고 관리하는 간편한 방법을 제공합니다.
가상화 종류  개발환경 가상화  개발 인터프리터 라이브러리   OS 수준 가상화:리눅스 컨테이너  OS의 독립된 공간 격리 isolation   머신가상화  하이퍼바이저    Docker 이미지 Docker의 가장 중요한 개념 중 하나는 &amp;ldquo;이미지&amp;quot;입니다. 이미지는 애플리케이션을 실행 가능한 패키지로, 개발자는 애플리케이션을 이미지로 빌드하여 필요한 환경 설정을 할 수 있습니다.</description>
    </item>
    
    <item>
      <title>Docker의 다양한 이용</title>
      <link>https://xeexin.github.io/team1WebPage/docker/docker2/</link>
      <pubDate>Sun, 28 May 2023 21:29:20 +0200</pubDate>
      
      <guid>https://xeexin.github.io/team1WebPage/docker/docker2/</guid>
      <description>Docker의 다양한 이용 사례  애플리케이션 개발 및 테스트 애플리케이션 배포 개발 및 테스트 환경 제공    애플리케이션 개발 및 테스트 Docker는 개발자들이 애플리케이션을 격리된 환경에서 실행하고 테스트하는 데에 매우 유용합니다. 개발 환경의 일관성을 유지하고 충돌을 방지하여 개발자들이 신속하게 개발 및 테스트를 진행할 수 있습니다.
애플리케이션 배포 Docker는 애플리케이션을 컨테이너로 패키징하여 배포하는 데 사용됩니다. 컨테이너화된 애플리케이션은 환경에 구애받지 않고 일관되게 실행되며, 클라우드, 가상화된 환경 등 어디에서나 배포할 수 있습니다.</description>
    </item>
    
    <item>
      <title>오픈소스 라이선스의 종류</title>
      <link>https://xeexin.github.io/team1WebPage/opensource/creating-a-new-theme/</link>
      <pubDate>Sun, 28 May 2023 13:50:46 +0200</pubDate>
      
      <guid>https://xeexin.github.io/team1WebPage/opensource/creating-a-new-theme/</guid>
      <description>GNU GPL(General Public License)  수정과 배포 모두 제한이 없으나 원본 프로그램이 GPL로 배포되었다면 수정된 프로그램 또한 GPL로 배포되어야 합니다. 가장 강력한 copyleft   1. GPL 프로그램을 어떠한 목적으로든지 사용할 수 있다.
 2. GPL 프로그램의 소스 코드를 용도에 따라 변경 할 수 있다. (개작 가능)
 3. GPL 프로그램을 판매/배포시 소스 코드도 요청하면 제공하여야 한다. (원본 배포 의무)
 4. 변경된 컴퓨터 프로그램 역시 프로그램의 소스 코드를 요청시 제공해야 한다.</description>
    </item>
    
    <item>
      <title>오픈소스에 대하여</title>
      <link>https://xeexin.github.io/team1WebPage/opensource/categories-post/</link>
      <pubDate>Sat, 27 May 2023 21:29:20 +0200</pubDate>
      
      <guid>https://xeexin.github.io/team1WebPage/opensource/categories-post/</guid>
      <description>오픈소스란? 오픈소스 소프트웨어(OSS) 란 소스코드를 공개하여 누구나 수정하고 사용할 수 있는 라이선스를 가진 소프트웨어를 말하며,
오픈소스 나 공개 소프트웨어 등으로도 불립니다.
주로 GitHub를 통해 소스코드를 공개하며, 최근에 일론 머스크가 인수한 트위터가 자사의 추천 알고리즘과 트위터 내부 소스코드 일부를 GitHub에 공개한 것이 화제가 되기도 했습니다.
오픈소스의 역사 소프트웨어 산업의 태동기 시절, 영리 소프트웨어 기업들은 소스코드를 공개하는 것을 꺼렸습니다.
소스코드를 복제해가면 누구나 해당 소프트웨어를 사용할 수 있었기에, 기업들은 특허와 지적재산권 등으로 소스코드를 철저하게 보호했습니다.</description>
    </item>
    
    <item>
      <title>HUGO 정적 사이트 생성기</title>
      <link>https://xeexin.github.io/team1WebPage/hugo/categories-post/</link>
      <pubDate>Thu, 25 May 2023 21:29:20 +0200</pubDate>
      
      <guid>https://xeexin.github.io/team1WebPage/hugo/categories-post/</guid>
      <description>HUGO, 대표적인 정적 사이트 생성기 HUGO는 GO 언어 기반으로 개발된 정적 사이트 생성기(SSG, Static Site Generator)입니다.
다양한 정적 사이트 생성기가 있으나, 빠른 빌드와 문서화가 잘되어있는 장점이 있습니다.
다시 말해 공식 문서를 기반으로 step by step 따라가면서 정적 웹사이트를 쉽게 제작할 수 있습니다.
 Static Site Generator  Jekyll  점유율 1위 한글 레퍼런스 많음 루비 기반 단점: 윈도우 지원X, 빌드시간이 느림   Hexo  Jekyll 다음으로 인기 있음 한글 레퍼런스 많음 자바 스크립트 기반   Hugo  한글 레퍼런스가 많지 않다 : 오픈소스 참여 가능 Go lang 기반 빌드가 빠르다 문서화 : 깃헙, 공식문서가 Hexo보다 잘 구성되어 있다.</description>
    </item>
    
    <item>
      <title>Hugo 개발 절차</title>
      <link>https://xeexin.github.io/team1WebPage/hugo/creating-a-new-theme/</link>
      <pubDate>Wed, 24 May 2023 21:29:20 +0200</pubDate>
      
      <guid>https://xeexin.github.io/team1WebPage/hugo/creating-a-new-theme/</guid>
      <description>Hugo, 개발 절차  Hugo 설치  apt install hugo 프로젝트 생성  hugo new site &amp;lt;site-name&amp;gt; 테마 사용  git clone &amp;lt;theme-url&amp;gt; 파일 만들기  hugo new &amp;lt;page-name&amp;gt; 테스트  hugo server --bind=0.0.0.0 빌드  hugo -t &amp;lt;테마이름&amp;gt;:hugo-developer-portfolio 퍼블리싱  cd &amp;lt;public 경로&amp;gt; git add . git commit -m &amp;#34;&amp;lt;commit-message&amp;gt;&amp;#34; git push </description>
    </item>
    
    <item>
      <title>File System</title>
      <link>https://xeexin.github.io/team1WebPage/linux/filesystem/</link>
      <pubDate>Tue, 23 May 2023 10:53:57 +0000</pubDate>
      
      <guid>https://xeexin.github.io/team1WebPage/linux/filesystem/</guid>
      <description>Linux 파일 시스템 리눅스 파일 시스템 구조  리눅스 시스템의 디렉토리는 전체적으로 역 트리 구조로 이루어져 있다
/  최상위 디렉토리인 루트 디렉토리를 의미한다. 루트 디렉토리는 리눅스의 모든 디렉토리들의 시작점이다. 모든 디렉토리를 절대경로로 표기할 때에 이 디렉토리로부터 시작해야 한다.
/bin  mv, ls, rm과 같은 기본적인 명령어가 저장되어 있는 디렉토리이다.
/boot  리눅스 부트로더(Boot Loader)가 존재하는 디렉토리이다.
/dev  시스템 디바이스 파일이 저장되어있는 디렉토리이다. 하드 디스크나 ROM에 관한 장치파일이 존재한다.</description>
    </item>
    
    <item>
      <title>Linux command</title>
      <link>https://xeexin.github.io/team1WebPage/linux/command/</link>
      <pubDate>Tue, 23 May 2023 10:25:30 +0000</pubDate>
      
      <guid>https://xeexin.github.io/team1WebPage/linux/command/</guid>
      <description>Linux 기본 명령어   1. pwd 2. mkdir
mkdir options 3. ls
ls options 4. cd 5. rm
rm options 6. cp 7. mv   pwd  pwd는 prind working directory의 약자로 현재 디렉토리의 경로를 보여주는 명령어이다. 현재 디렉토리가 /home/ubuntu라면 pwd를 입력하면 터미널 화면에 /home/ubuntu가 출력된다.
mkdir  mkdir은 make directory의 약자로 새로운 디렉토리를 생성할 때 사용한다. 아래의 DIRECTORY의 위치에 생성하고자 하는 디렉토리를 입력한다. 공백을 두고 여러 개의 디렉토리를 입력으로 넣으면 디렉토리들을 여러 개 만들 수 있다.</description>
    </item>
    
  </channel>
</rss>
